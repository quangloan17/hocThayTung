Ngày 03-08: Câu lệnh Query quan trọng
from app.models import *

Product.objects.all()
— SELECT * FROM app_product

Product.objects.get(pk=1)
— SELECT * FROM app_product WHERE id = 1

Product.objects.get(code=‘IPX’)
— SELECT * FROM app_product WHERE code = ‘IPX’

Product.objects.filter(name__contains='IPhone')
— SELECT * FROM app_product WHERE name LIKE ‘%Iphone%’

Product.objects.filter(name__startswith=‘IPhone')
— SELECT * FROM app_product WHERE name LIKE ‘Iphone%'

Product.objects.filter(name__endswith='IPhone')
— SELECT * FROM app_product WHERE name LIKE ‘%Iphone’

Product.objects.filter(price__gt = 10.0)
— SELECT * FROM app_product WHERE price > 10.0
— lt (less than), gte (greater than or equal), lte (less than or equal)

Product.objects.filter(name__contains='Iphone',price__lt=10.0)
Product.objects.filter(name__contains='Iphone').filter(price__lt=10.0)
— SELECT * from app_product WHERE name like ‘%Iphone%’ AND price < 10.0

Toán tử nạp chồng Overload NOT
from django.db.models import Q
Product.objects.filter(Q(code__contains='IP') | Q(name__contains='IP'))
— SELECT * from app_product WHERE code LIKE ‘%IP%’ OR name LIKE ‘%IP%’ 

Dấu ngã là không có mã sản phẩm IPX
Product.objects.filter(~Q(code='IPX'))
— SELECT * from app_product WHERE code <> ‘IPX'
	
Cấu trúc join bảng quan trọng
Product.objects.filter(chiphi__khachhang=)
Product.objects.filter(category__id = 1)

Lấy category nối với name để join bảng
Product.objects.filter(category__name__startswidth = 'IPhone')

Product.objects.get(pk=1).delete()
— DELETE from app_product WHERE id=1

Sắp xếp bảng theo cột
Product.objects.order_by(‘-price')